

Sending build context to Docker daemon  58.58MB
Step 1/10 : FROM eclipse-temurin:17-jdk-alpine AS builder
 ---> 6afd128b0d03
Step 2/10 : WORKDIR /usr/src/app
 ---> Using cache
 ---> e4bc0450dd2c
Step 3/10 : COPY src/main/java/ src/main/java/
 ---> Using cache
 ---> 711c0452dffa
Step 4/10 : COPY src/main/resources/ src/main/resources/
 ---> Using cache
 ---> 35c7fb07cbcc
Step 5/10 : RUN apk add --no-cache maven
 ---> Using cache
 ---> 7fe03ecd26f5
Step 6/10 : RUN javac src/main/java/com/example/bankapp/*.java -d out
 ---> Running in eb79fa3952da
src/main/java/com/example/bankapp/BankappApplication.java:3: error: package org.springframework.boot does not exist
import org.springframework.boot.SpringApplication;
                               ^
src/main/java/com/example/bankapp/BankappApplication.java:4: error: package org.springframework.boot.autoconfigure does not exist
import org.springframework.boot.autoconfigure.SpringBootApplication;
                                             ^
src/main/java/com/example/bankapp/BankappApplication.java:6: error: cannot find symbol
@SpringBootApplication
 ^
  symbol: class SpringBootApplication
src/main/java/com/example/bankapp/BankappApplication.java:10: error: cannot find symbol
                SpringApplication.run(BankappApplication.class, args);
                ^
  symbol:   variable SpringApplication
  location: class BankappApplication
4 errors
The command '/bin/sh -c javac src/main/java/com/example/bankapp/*.java -d out' returned a non-zero code: 1
ubuntu@Server:~/Blue-Green-d$ ^C
ubuntu@Server:~/Blue-Green-d$ rm pom.xml
ubuntu@Server:~/Blue-Green-d$ nano pom.xml
ubuntu@Server:~/Blue-Green-d$
